# This is a basic workflow to help you get started with Actions

name: Jupytext and Docker build

# Controls when the workflow will run
on:
  # Triggers the workflow on push only for ipynb modifications
  push:
    branches: [ main ]
    paths:
      - 'decision-tree-classifier.ipynb'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repo
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jupytext pipreqs
        
    # It is not necessary to specify $GITHUB_WORKSPACE since it is the current folder
    - name: Convert notebook to py script
      run: |
        jupytext --to py decision-tree-classifier.ipynb -o $GITHUB_WORKSPACE/python/decision-tree-classifier.py 

    - name: Generate requirements.txt 
      run: pipreqs --force python/ 

    # WARNING: It will fail if decision-tree-classifier.ipynb is renamed without further changes 
    - name: Commit new py executable if necessary
      run:  |
        if ! git diff --exit-code decision-tree-classifier.ipynb; then
          git config --global user.name 'roldanx'
          git config --global user.email 'roldanx@github.com'
          git add $GITHUB_WORKSPACE/python/decision-tree-classifier.py $GITHUB_WORKSPACE/python/requirements.txt
          git commit -m "Update executable and generate requirements"
          git fetch origin main
          git push origin HEAD:main
          echo "Changes to be commited in decision-tree-classifier.py"
        else
          echo "NO changes to be commited in decision-tree-classifier.py"
          pwd
          ls /home
        fi

    - name: Build and push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: roldanx/tree-classifier-mlflow
        registry: docker.io
        dockerfile: python/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
