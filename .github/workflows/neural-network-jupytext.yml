# This is a basic workflow
name: Neural network to binary

# Controls when the workflow will run
on:
  # Triggers the workflow on push only for ipynb modifications
  pull_request:
    types:
      - opened
      - reopened
    branches:
      - main
    paths:
      - 'model-neural-network/neural-network.ipynb'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repo
      uses: actions/checkout@v2

    # Checks if notebook output has been cleaned
    - uses: ResearchSoftwareActions/EnsureCleanNotebooksAction@1.1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jupytext pipreqs
        
    # It would not be necessary to specify $GITHUB_WORKSPACE since it is the current folder
    - name: Convert notebook to py script
      run: |
        jupytext --to py $GITHUB_WORKSPACE/model-neural-network/neural-network.ipynb -o $GITHUB_WORKSPACE/model-neural-network/neural-network.py

    - name: Generate requirements.txt 
      run: pipreqs --force $GITHUB_WORKSPACE/model-tree-classifier/ 

    # WARNING: It will probably fail if neural-network.ipynb is renamed without further changes
    # WARNING: At this time, .py and reqs are commited to Merge commit, but it can be modified under actions/checkout@v2
    # so the commit goes to release/xxx branch
    - name: Commit new py executable if necessary
      run:  |
        pwd
        git status
        if ! git diff --exit-code $GITHUB_WORKSPACE/model-neural-network/neural-network.ipynb; then          
          git config --global user.name 'roldanx'
          git config --global user.email 'roldanx@github.com'
          git add $GITHUB_WORKSPACE/model-neural-network/neural-network.py $GITHUB_WORKSPACE/model-neural-network/requirements.txt
          git commit -m "Update executable and generate requirements"
          git fetch origin main
          git push origin HEAD:main
          echo "Changes to be commited in neural-network.py"
        else
          echo "NO changes to be commited in neural-network.py"
          pwd
          ls /home
        fi
